name: End to End Test

on:
  push: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo build --release --locked
      - uses: actions/upload-artifact@v4
        with:
          name: binary
          path: target/release/mrpack-container
  e2e:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        mrpackfile: [quilt-simple.mrpack, fabric-simple.mrpack]
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            tests/mrpacks
      - uses: actions/download-artifact@v4
        with:
          name: binary
          path: /usr/local/bin
          merge-multiple: true
      - name: Install mrpack-container
        run: chmod +x /usr/local/bin/mrpack-container
      - name: Build Container
        run: mrpack-container --output ./output "tests/mrpacks/${{ matrix.mrpackfile }}" 
      - name: Run Container
        run: |
          wget --no-verbose "https://piston-data.mojang.com/v1/objects/84194a2f286ef7c14ed7ce0090dba59902951553/server.jar"
          container_id=$(tar cf - -C ./output . | podman load | awk '{ print $3 }')
          mkdir /tmp/world
          chmod a+rwx /tmp/world
          echo "eula=true" > eula.txt
          podman run \
            --detach \
            --publish 25565:25565 \
            --volume /tmp/world:/var/minecraft/world \
            --volume "$(pwd)"/server.jar:/usr/local/minecraft/server.jar:ro \
            --volume "$(pwd)"/eula.txt:/var/minecraft/eula.txt:ro \
            "$container_id" > running_container_id
      - name: Verify Container is hosting a Minecraft Server 
        run: |
          python3 -m pip install mcstatus
          sleep 60
          podman logs $(cat running_container_id)
          mcstatus localhost status
      - name: Verify world save
        run: |
          if [ -f /tmp/world/level.dat ]; then
            echo "Level file found in expected location"
          else
            echo "Level file not found!"
            false
          fi
  stability-test:
    # Build the same image multiple times, and make sure they're the same.
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        instance: [1, 2, 3]
    outputs:
      digest_1: ${{ steps.digest.outputs.digest_1 }}
      digest_2: ${{ steps.digest.outputs.digest_2 }}
      digest_3: ${{ steps.digest.outputs.digest_3 }}
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            tests/mrpacks
      - uses: actions/download-artifact@v4
        with:
          name: binary
          path: /usr/local/bin
          merge-multiple: true
      - name: Install mrpack-container
        run: chmod +x /usr/local/bin/mrpack-container
      - name: Build Container
        run: mrpack-container --output ./output "tests/mrpacks/fabric-simple.mrpack"
      - name: Debug Output for Investigations
        run: |
          tree output/
          ls -l output/blobs/sha256
          jq <output/index.json
          jq <"output/blobs/sha256/$(jq <output/index.json -r '.manifests[0].digest' | awk '{split($0,a,":"); print a[2]}')"
      - name: Report Image Digest
        id: digest
        run: echo "digest_${{matrix.instance}}=$(jq <output/index.json '.manifests[0].digest')" >> "$GITHUB_OUTPUT"
  verify-stability:
    runs-on: ubuntu-latest
    needs: stability-test
    steps:
      - name: Compare artifacts
        run: |
          echo '${{ toJSON(needs.stability-test.outputs) }}'
